{"ast":null,"code":"var _jsxFileName = \"/Users/ecuarezma/Desktop/WEB_DEV/PORTFOLIO/Entrantre3/pages/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Splash from \"../components/Splash\";\nimport Gallery from \"../components/Gallery\";\n\nconst Page = () => {\n  let pathId;\n  const router = useRouter();\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    setLoading(false);\n    pathId = router.query.id;\n  });\n  return isLoading ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Loading...\") : __jsx(Gallery, {\n    pathId: pathId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/ecuarezma/Desktop/WEB_DEV/PORTFOLIO/Entrantre3/pages/[id].js"],"names":["React","useEffect","useState","useRouter","Splash","Gallery","Page","pathId","router","isLoading","setLoading","query","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,MAAIC,MAAJ;AACA,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,IAAAA,MAAM,GAAGC,MAAM,CAACG,KAAP,CAAaC,EAAtB;AACD,GAHQ,CAAT;AAIA,SAAOH,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAAuB,MAAC,OAAD;AAAS,IAAA,MAAM,EAAEF,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvC;AACD,CATD;;AAWA,eAAeD,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Splash from \"../components/Splash\";\nimport Gallery from \"../components/Gallery\";\n\nconst Page = () => {\n  let pathId;\n  const router = useRouter();\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(false);\n    pathId = router.query.id;\n  });\n  return isLoading ? <p>Loading...</p> : <Gallery pathId={pathId} />;\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}