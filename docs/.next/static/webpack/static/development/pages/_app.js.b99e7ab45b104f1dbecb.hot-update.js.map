{"version":3,"file":"static/webpack/static/development/pages/_app.js.b99e7ab45b104f1dbecb.hot-update.js","sources":["webpack:///./components/NavLink/index.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/readOnlyError.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport Link from \"next/link\";\n\nconst NavLink = ({ id }) => {\n  const router = useRouter();\n  const [isActive, setActive] = useState(false);\n  const link = <a>{id}</a>;\n  const handleToggle = id => {\n    setActive(true);\n    link = <a className={isActive ? \"active\" : undefined}>{id}</a>;\n  };\n  return (\n    <li onClick={() => handleToggle(id)}>\n      <Link href=\"/[id]\" as={`/${id}`}>\n        {link}\n      </Link>\n    </li>\n  );\n};\n\nexport default NavLink;\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}